name: Build and push Docker images
description: "Build and push docker image into docker registry in the expected format of on-premises k8s-deploy"
author: MP-ES
branding:
  icon: "anchor"
  color: "purple"
inputs:
  registry:
    description: "Server address of Docker registry. If not set then will default to Docker Hub"
    required: false
    default: "hub.docker.com"
  username:
    description: "Username used to log against the Docker registry"
    required: false
  password:
    description: "Password or personal access token used to log against the Docker registry"
    required: false
  build-args:
    description: "List of build-time variables"
    required: false
  context:
    description: "Build's context is the set of files located in the specified PATH or URL"
    required: false
  file:
    description: "Path to the Dockerfile"
    required: false
  image:
    description: "The name of docker image"
    required: true
  push:
    description: "Control if the image have to be pushed to the registry"
    required: false
    default: "true"
outputs:
  image-tag:
    description: "Tag assigned to docker image"
    value: ${{ steps.image_tag.outputs.tag }}
runs:
  using: "composite"
  steps:
    - uses: AutoModality/action-clean@v1
    - run: ${{ github.action_path }}/validate.sh
      shell: bash
      env:
        INPUT_REGISTRY: ${{ inputs.registry }}
        INPUT_IMAGE: ${{ inputs.image }}
        INPUT_PUSH: ${{ inputs.push }}
    - id: commit_hash
      run: echo "::set-output name=value::$( git rev-parse --short HEAD )"
      shell: bash
    - id: tag
      run: echo "::set-output name=value::${{ env.registry }}/${{ github.event.repository.name }}/${{ env.image }}:${{ steps.commit_hash.outputs.value }}"
      shell: bash
    - uses: actions/checkout@v2
    - name: Login to Docker Registry
      uses: docker/login-action@v1
      with:
        with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
    - name: Build and Push
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.context }}
        tags: ${{ steps.tag.outputs.value }}
        file: ${{ inputs.file }}
        push: ${{ env.push }}
        build-args: ${{ inputs.build-args }}
